{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact.service\";\nconst _c0 = function () {\n  return [\"contactGroup\"];\n};\nfunction ContactListComponent_app_contact_item_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-contact-item\", 11);\n  }\n  if (rf & 2) {\n    const contactEl_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    i0.ɵɵproperty(\"contact\", contactEl_r2)(\"index\", i_r3)(\"dragEnabled\", true)(\"dragData\", contactEl_r2)(\"dropZones\", i0.ɵɵpureFunction0(5, _c0));\n  }\n}\nexport class ContactListComponent {\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.contacts = [];\n  }\n  ngOnInit() {\n    this.contacts = this.contactService.getContacts();\n    this.contactService.contactChangedEvent.subscribe(contacts => {\n      this.contacts = contacts;\n    });\n    this.subscription = this.contactService.contactListChangedEvent.subscribe(contactList => {\n      this.contacts = contactList;\n    });\n  }\n  search(value) {\n    this.term = value;\n    // console.log(\"Attempted Search with: \" + this.term);\n  }\n}\n\nContactListComponent.ɵfac = function ContactListComponent_Factory(t) {\n  return new (t || ContactListComponent)(i0.ɵɵdirectiveInject(i1.contactService));\n};\nContactListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactListComponent,\n  selectors: [[\"app-contact-list\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\", \"custom-flex\"], [\"routerLink\", \"new\", 1, \"btn\", \"btn-success\"], [1, \"panel-body\"], [1, \"input-group\", \"pull-left\", \"pad-left-right\", \"col-xs-7\"], [\"placeholder\", \"Enter a search value\", \"type\", \"text\", 1, \"form-control\", 3, \"keyup\"], [\"searchBox\", \"\"], [1, \"glyphicon\", \"glyphicon-search\", \"input-group-addon\", 3, \"click\"], [\"dnd-draggable\", \"\", 3, \"contact\", \"index\", \"dragEnabled\", \"dragData\", \"dropZones\", 4, \"ngFor\", \"ngForOf\"], [\"dnd-draggable\", \"\", 3, \"contact\", \"index\", \"dragEnabled\", \"dragData\", \"dropZones\"]],\n  template: function ContactListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h3\");\n      i0.ɵɵtext(5, \"Contacts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"a\", 4);\n      i0.ɵɵtext(7, \"New Contact\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 0)(10, \"div\", 6)(11, \"input\", 7, 8);\n      i0.ɵɵlistener(\"keyup\", function ContactListComponent_Template_input_keyup_11_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(12);\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 9);\n      i0.ɵɵlistener(\"click\", function ContactListComponent_Template_div_click_13_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(12);\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 0)(15, \"div\", 1);\n      i0.ɵɵtemplate(16, ContactListComponent_app_contact_item_16_Template, 1, 6, \"app-contact-item\", 10);\n      i0.ɵɵpipe(17, \"contactsFilter\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(12);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(17, 1, ctx.contacts, _r0.value));\n    }\n  },\n  styles: [\".custom-flex[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29udGFjdHMvY29udGFjdC1saXN0L2NvbnRhY3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixtQkFBbUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VzdG9tLWZsZXgge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAoBwBA,uCAMmB;;;;;IAJfA,sCAAqB;;;ACZjD,OAAM,MAAOC,oBAAoB;EAK/BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAJlC,aAAQ,GAAc,EAAE;EAMxB;EAEAC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE;IACjD,IAAI,CAACH,cAAc,CAACI,mBAAmB,CAACC,SAAS,CAC9CH,QAAmB,IAAI;MACtB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CACF;IACD,IAAI,CAACI,YAAY,GAAG,IAAI,CAACN,cAAc,CAACO,uBAAuB,CAACF,SAAS,CACtEG,WAAsB,IAAI;MACzB,IAAI,CAACN,QAAQ,GAAGM,WAAW;IAC7B,CAAC,CACF;EACH;EAEAC,MAAM,CAACC,KAAa;IAClB,IAAI,CAACC,IAAI,GAAGD,KAAK;IACjB;EACF;;;AA1BWZ,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDVjCnB,8BAAiB;MAIGA,wBAAQ;MAAAA,iBAAK;MACjBA,4BAA4C;MAAAA,2BAAW;MAAAA,iBAAI;MAE/DA,8BAAwB;MAI8DA;QAAAA;QAAA;QAAA,OAASA,oCAAuB;MAAA,EAAC;MAA3GA,iBAAwH;MAGxHA,+BACsC;MAAlCA;QAAAA;QAAA;QAAA,OAASA,oCAAuB;MAAA,EAAC;MAACA,iBAAM;MAGpDA,+BAAiB;MAETA,kGAMmB;;MACvBA,iBAAM;;;;MANwBA,gBAA+C;MAA/CA,wEAA+C","names":["i0","ContactListComponent","constructor","contactService","ngOnInit","contacts","getContacts","contactChangedEvent","subscribe","subscription","contactListChangedEvent","contactList","search","value","term","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/felipe/workspace/cms/src/app/contacts/contact-list/contact-list.component.html","/home/felipe/workspace/cms/src/app/contacts/contact-list/contact-list.component.ts"],"sourcesContent":["<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <div class=\"panel panel-default\">\n            <div class=\"panel-heading custom-flex\">\n                <h3>Contacts</h3>\n                <a routerLink=\"new\" class=\"btn btn-success\">New Contact</a>\n            </div>\n            <div class=\"panel-body\">\n                <div class=\"row\">\n                    <div class=\"input-group pull-left pad-left-right col-xs-7\">\n                        \n                        <input class=\"form-control\" placeholder=\"Enter a search value\" #searchBox (keyup)=\"search(searchBox.value)\" type=\"text\">\n        \n        \n                        <div class=\"glyphicon glyphicon-search input-group-addon\"\n                            (click)=\"search(searchBox.value)\"></div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-xs-12\">\n                        <app-contact-item \n                            *ngFor=\"let contactEl of contacts  | contactsFilter:searchBox.value; let i = index;\" \n                            [contact]=\"contactEl\" \n                            [index]=\"i\"\n                            dnd-draggable [dragEnabled]=\"true\" [dragData]=\"contactEl\" [dropZones]=\"['contactGroup']\"\n                            >\n                        </app-contact-item>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Subscription } from \"rxjs\";\nimport { Contact } from '../contact.model';\nimport { contactService } from '../contact.service';\n\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent {\n  contacts: Contact[] = [];\n  term: string;\n  private subscription: Subscription;\n\n  constructor(private contactService: contactService) {\n\n  }\n\n  ngOnInit() {\n    this.contacts = this.contactService.getContacts(); \n    this.contactService.contactChangedEvent.subscribe(\n      (contacts: Contact[]) => {\n        this.contacts = contacts;\n      }\n    );\n    this.subscription = this.contactService.contactListChangedEvent.subscribe(\n      (contactList: Contact[]) => {\n        this.contacts = contactList\n      }\n    );\n  }\n\n  search(value: string) {\n    this.term = value;\n    // console.log(\"Attempted Search with: \" + this.term);\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}