{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../message.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../message-item/message-item.component\";\nimport * as i4 from \"../message-edit/message-edit.component\";\nfunction MessageListComponent_cms_message_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"cms-message-item\", 10);\n  }\n  if (rf & 2) {\n    const messageEl_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"inputMessage\", messageEl_r1);\n  }\n}\nexport class MessageListComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n    this.messages = [];\n  }\n  // Lifecycle hook/method\n  ngOnInit() {\n    this.subscription = this.messageService.messageChangedEvent.subscribe(messages => {\n      if (Array.isArray(messages)) {\n        this.messages = messages;\n      } else {\n        console.error('Error retrieving messages: ', messages);\n      }\n    });\n    this.messageService.getMessages();\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\nMessageListComponent.ɵfac = function MessageListComponent_Factory(t) {\n  return new (t || MessageListComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n};\nMessageListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MessageListComponent,\n  selectors: [[\"cms-message-list\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col-md-5\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"row\", \"pad-left-right\"], [1, \"title\", \"pull-left\"], [1, \"panel-body\"], [1, \"col-xs-12\"], [3, \"inputMessage\", 4, \"ngFor\", \"ngForOf\"], [1, \"panel-footer\"], [3, \"inputMessage\"]],\n  template: function MessageListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"span\", 5);\n      i0.ɵɵtext(6, \"Messages\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 0)(9, \"div\", 7);\n      i0.ɵɵtemplate(10, MessageListComponent_cms_message_item_10_Template, 1, 1, \"cms-message-item\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 9);\n      i0.ɵɵelement(12, \"cms-message-edit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.MessageItemComponent, i4.MessageEditComponent],\n  styles: [\".title[_ngcontent-%COMP%] {\\n  font-size: 2.5rem;\\n  font-weight: bold;\\n}\\n.pad-left-right[_ngcontent-%COMP%] {\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZS1saXN0L21lc3NhZ2UtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMi41cmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5wYWQtbGVmdC1yaWdodCB7XG4gIHBhZGRpbmctbGVmdDogMXJlbTtcbiAgcGFkZGluZy1yaWdodDogMXJlbTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAaYA,uCAGoB;;;;IADlBA,2CAA0B;;;ACJxC,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAHlC,aAAQ,GAAc,EAAE;EAG6B;EAErD;EACAC,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,cAAc,CAACG,mBAAmB,CAACC,SAAS,CAClEC,QAAmB,IAAI;MACtB,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACA,QAAQ,GAAGA,QAAQ;OACzB,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEJ,QAAQ,CAAC;;IAE1D,CAAC,CACF;IACD,IAAI,CAACL,cAAc,CAACU,WAAW,EAAE;EACnC;EAEAC,WAAW;IACT,IAAI,CAACT,YAAY,CAACU,WAAW,EAAE;EACjC;;AAtBWd,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXjCpB,8BAAiB;MAKuBA,wBAAQ;MAAAA,iBAAO;MAGjDA,8BAAwB;MAKlBA,iGAGoB;MACtBA,iBAAM;MAGVA,+BAA0B;MAExBA,oCAAqC;MACvCA,iBAAM;;;MATwBA,gBAAW;MAAXA,sCAAW","names":["i0","MessageListComponent","constructor","messageService","ngOnInit","subscription","messageChangedEvent","subscribe","messages","Array","isArray","console","error","getMessages","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/felipe/workspace/cms/src/app/messages/message-list/message-list.component.html","/home/felipe/workspace/cms/src/app/messages/message-list/message-list.component.ts"],"sourcesContent":["<div class=\"row\">\n  <div class=\"col-md-5\">\n    <div class=\"panel panel-default\">\n      <div class=\"panel-heading\">\n        <div class=\"row pad-left-right\">\n          <span class=\"title pull-left\">Messages</span>\n        </div>\n      </div>\n      <div class=\"panel-body\">\n        <div class=\"row\">\n          <div class=\"col-xs-12\">\n            <!--Add tag to load the MessageItemComponent-->\n            <!-- inputMessage comes from message-item.component.ts -->\n            <cms-message-item\n              *ngFor=\"let messageEl of messages\"\n              [inputMessage]=\"messageEl\"\n            ></cms-message-item>\n          </div>\n        </div>\n      </div>\n      <div class=\"panel-footer\">\n        <!--Add tag to load the MessageEditComponent-->\n        <cms-message-edit></cms-message-edit>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message } from '../message.model';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'cms-message-list',\n  templateUrl: './message-list.component.html',\n  styleUrls: ['./message-list.component.css'],\n})\nexport class MessageListComponent implements OnInit, OnDestroy {\n  messages: Message[] = [];\n  private subscription: Subscription;\n\n  constructor(private messageService: MessageService) {}\n\n  // Lifecycle hook/method\n  ngOnInit() {\n    this.subscription = this.messageService.messageChangedEvent.subscribe(\n      (messages: Message[]) => {\n        if (Array.isArray(messages)) {\n          this.messages = messages;\n        } else {\n          console.error('Error retrieving messages: ', messages);\n        }\n      }\n    );\n    this.messageService.getMessages();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}