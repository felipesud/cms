{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MOCKDOCUMENTS } from './MOCKDOCUMENTS';\nimport * as i0 from \"@angular/core\";\nexport class DocumentService {\n  constructor() {\n    this.documentSelectedEvent = new EventEmitter();\n    this.documents = [];\n    this.documents = MOCKDOCUMENTS;\n  }\n  getDocuments() {\n    return this.documents.slice();\n  }\n  getDocument(id) {\n    return this.documents.find(document => document.id === id);\n  }\n}\nDocumentService.ɵfac = function DocumentService_Factory(t) {\n  return new (t || DocumentService)();\n};\nDocumentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DocumentService,\n  factory: DocumentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;AAGxD,SAASC,aAAa,QAAQ,iBAAiB;;AAK/C,OAAM,MAAOC,eAAe;EAI1BC;IAHA,0BAAqB,GAAG,IAAIH,YAAY,EAAY;IACpD,cAAS,GAAe,EAAE;IAGxB,IAAI,CAACI,SAAS,GAAGH,aAAa;EAChC;EAEAI,YAAY;IACV,OAAO,IAAI,CAACD,SAAS,CAACE,KAAK,EAAE;EAC/B;EAEAC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACJ,SAAS,CAACK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACF,EAAE,KAAKA,EAAE,CAAC;EAC9D;;AAdWN,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAS,SAAfT,eAAe;EAAAU,YAFd;AAAM","names":["EventEmitter","MOCKDOCUMENTS","DocumentService","constructor","documents","getDocuments","slice","getDocument","id","find","document","factory","providedIn"],"sourceRoot":"","sources":["/home/felipe/workspace/cms/src/app/documents/document.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\nimport { Document } from './document.model';\nimport { MOCKDOCUMENTS } from './MOCKDOCUMENTS';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DocumentService {\n  documentSelectedEvent = new EventEmitter<Document>();\n  documents: Document[] = [];\n\n  constructor() {\n    this.documents = MOCKDOCUMENTS;\n  }\n\n  getDocuments(): Document[] {\n    return this.documents.slice();\n  }\n\n  getDocument(id: string) {\n    return this.documents.find((document) => document.id === id);\n  }\n\n  // getDocument(id: string): Document | null {\n  //   const document = this.documents.find((d) => d.id === id);\n  //   return document ? document : null;\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}