{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MOCKDOCUMENTS } from './MOCKDOCUMENTS';\nimport * as i0 from \"@angular/core\";\nexport class DocumentService {\n  constructor() {\n    this.documentSelectedEvent = new EventEmitter();\n    this.documentChangedEvent = new EventEmitter();\n    this.documents = [];\n    this.documents = MOCKDOCUMENTS;\n  }\n  deleteDocument(document) {\n    if (!document) {\n      return;\n    }\n    const pos = this.documents.indexOf(document);\n    if (pos < 0) {\n      return;\n    }\n    this.documents.splice(pos, 1);\n    this.documentChangedEvent.emit(this.documents.slice());\n  }\n  getDocuments() {\n    return this.documents.slice();\n  }\n  getDocument(id) {\n    return this.documents.find(document => document.id === id);\n  }\n}\nDocumentService.ɵfac = function DocumentService_Factory(t) {\n  return new (t || DocumentService)();\n};\nDocumentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DocumentService,\n  factory: DocumentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;AAGxD,SAASC,aAAa,QAAQ,iBAAiB;;AAK/C,OAAM,MAAOC,eAAe;EAK1BC;IAJA,0BAAqB,GAAG,IAAIH,YAAY,EAAY;IACpD,yBAAoB,GAAG,IAAIA,YAAY,EAAc;IACrD,cAAS,GAAe,EAAE;IAGxB,IAAI,CAACI,SAAS,GAAGH,aAAa;EAChC;EAEAI,cAAc,CAACC,QAAkB;IAC/B,IAAI,CAACA,QAAQ,EAAE;MACb;;IAGF,MAAMC,GAAG,GAAG,IAAI,CAACH,SAAS,CAACI,OAAO,CAACF,QAAQ,CAAC;IAC5C,IAAIC,GAAG,GAAG,CAAC,EAAE;MACX;;IAGF,IAAI,CAACH,SAAS,CAACK,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;IAC7B,IAAI,CAACG,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,EAAE,CAAC;EACxD;EAEAC,YAAY;IACV,OAAO,IAAI,CAACT,SAAS,CAACQ,KAAK,EAAE;EAC/B;EAEAE,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACX,SAAS,CAACY,IAAI,CAAEV,QAAQ,IAAKA,QAAQ,CAACS,EAAE,KAAKA,EAAE,CAAC;EAC9D;;AA7BWb,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAFd;AAAM","names":["EventEmitter","MOCKDOCUMENTS","DocumentService","constructor","documents","deleteDocument","document","pos","indexOf","splice","documentChangedEvent","emit","slice","getDocuments","getDocument","id","find","factory","providedIn"],"sourceRoot":"","sources":["/home/felipe/workspace/cms/src/app/documents/document.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\n\nimport { Document } from './document.model';\nimport { MOCKDOCUMENTS } from './MOCKDOCUMENTS';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DocumentService {\n  documentSelectedEvent = new EventEmitter<Document>();\n  documentChangedEvent = new EventEmitter<Document[]>();\n  documents: Document[] = [];\n\n  constructor() {\n    this.documents = MOCKDOCUMENTS;\n  }\n\n  deleteDocument(document: Document) {\n    if (!document) {\n      return;\n    }\n\n    const pos = this.documents.indexOf(document);\n    if (pos < 0) {\n      return;\n    }\n\n    this.documents.splice(pos, 1);\n    this.documentChangedEvent.emit(this.documents.slice());\n  }\n\n  getDocuments(): Document[] {\n    return this.documents.slice();\n  }\n\n  getDocument(id: string) {\n    return this.documents.find((document) => document.id === id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}