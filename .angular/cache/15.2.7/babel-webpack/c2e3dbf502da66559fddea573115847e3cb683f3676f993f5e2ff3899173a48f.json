{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MOCKMESSAGES } from './MOCKMESSAGES';\nimport * as i0 from \"@angular/core\";\nexport class MessageService {\n  constructor() {\n    this.messageChangedEvent = new EventEmitter();\n    this.messages = MOCKMESSAGES;\n  }\n  getMessages() {\n    //  return the list of contacts\n    return this.messages.slice();\n  }\n  getMessage(id) {\n    return this.messages.find(message => {\n      // return this.contact.id === id;\n      return message.id === id;\n    });\n  }\n  addMessage(message) {\n    this.messages.push(message);\n    this.messageChangedEvent.emit(this.messages.slice());\n  }\n}\nMessageService.ɵfac = function MessageService_Factory(t) {\n  return new (t || MessageService)();\n};\nMessageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MessageService,\n  factory: MessageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,YAAY,QAAQ,eAAe;AAExD,SAASC,YAAY,QAAQ,gBAAgB;;AAK7C,OAAM,MAAOC,cAAc;EAKzBC;IAFA,wBAAmB,GAAG,IAAIH,YAAY,EAAa;IAGjD,IAAI,CAACI,QAAQ,GAAGH,YAAY;EAC9B;EAEAI,WAAW;IACT;IACA,OAAO,IAAI,CAACD,QAAQ,CAACE,KAAK,EAAE;EAC9B;EAEAC,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,IAAG;MAChC;MACA,OAAOA,OAAO,CAACF,EAAE,KAAKA,EAAE;IAC5B,CAAC,CAAC;EACN;EAEEG,UAAU,CAACD,OAAgB;IACzB,IAAI,CAACN,QAAQ,CAACQ,IAAI,CAACF,OAAO,CAAC;IAC3B,IAAI,CAACG,mBAAmB,CAACC,IAAI,CAAC,IAAI,CAACV,QAAQ,CAACE,KAAK,EAAE,CAAC;EACtD;;AAxBWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAa,SAAdb,cAAc;EAAAc,YAFb;AAAM","names":["EventEmitter","MOCKMESSAGES","MessageService","constructor","messages","getMessages","slice","getMessage","id","find","message","addMessage","push","messageChangedEvent","emit","factory","providedIn"],"sourceRoot":"","sources":["/home/felipe/workspace/cms/src/app/messages/message.service.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { Message } from './messages.model';\nimport { MOCKMESSAGES } from './MOCKMESSAGES';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  messages: Message[];\n  messageChangedEvent = new EventEmitter<Message[]>();\n\n  constructor() {\n    this.messages = MOCKMESSAGES;\n  }\n\n  getMessages(): Message[]{\n    //  return the list of contacts\n    return this.messages.slice();\n  }\n\n  getMessage(id: string): Message {\n    return this.messages.find(message => {\n        // return this.contact.id === id;\n        return message.id === id;\n    });\n}\n\n  addMessage(message: Message){\n    this.messages.push(message);\n    this.messageChangedEvent.emit(this.messages.slice());\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}