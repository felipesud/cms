{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../contact-item/contact-item.component\";\nfunction ContactListComponent_cms_contact_item_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"cms-contact-item\", 10);\n  }\n  if (rf & 2) {\n    const contactEl_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"contact\", contactEl_r1);\n  }\n}\nconst _c0 = function () {\n  return [\"new\"];\n};\nexport class ContactListComponent {\n  constructor(contactSevice) {\n    this.contactSevice = contactSevice;\n    this.contacts = [];\n    this.contacts = this.contactSevice.getContacts();\n  }\n  ngOnInit() {\n    this.contactSevice.contactChangedEvent.subscribe(contacts => {\n      this.contacts = contacts;\n    });\n  }\n}\nContactListComponent.ɵfac = function ContactListComponent_Factory(t) {\n  return new (t || ContactListComponent)(i0.ɵɵdirectiveInject(i1.ContactService));\n};\nContactListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactListComponent,\n  selectors: [[\"cms-contact-list\"]],\n  decls: 13,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"panel\", \"panel-default\"], [1, \"col-xs-12\", \"panel-heading\"], [1, \"col-xs-9\"], [1, \"heading\"], [1, \"col-xs-3\"], [1, \"btn\", \"btn-success\", 3, \"routerLink\"], [1, \"panel-body\"], [1, \"col-xs-12\", \"margin-top\"], [3, \"contact\", 4, \"ngFor\", \"ngForOf\"], [3, \"contact\"]],\n  template: function ContactListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"span\", 4);\n      i0.ɵɵtext(5, \"Contacts\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"a\", 6);\n      i0.ɵɵtext(8, \"New Contact\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 0)(11, \"div\", 8);\n      i0.ɵɵtemplate(12, ContactListComponent_cms_contact_item_12_Template, 1, 1, \"cms-contact-item\", 9);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.contacts);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink, i4.ContactItemComponent],\n  styles: [\"img[_ngcontent-%COMP%] {\\n  max-height: 50px;\\n}\\n\\n\\n.heading[_ngcontent-%COMP%] {\\n  font-size: 15pt;\\n}\\n\\n.margin-top[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29udGFjdHMvY29udGFjdC1saXN0L2NvbnRhY3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQjtBQUNuQjtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQSxvQkFBb0I7QUFDcEI7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIGh0bWwgc2VsZWN0b3JzICovXG5pbWcge1xuICBtYXgtaGVpZ2h0OiA1MHB4O1xufVxuXG4vKiBjbGFzcyBzZWxlY3RvcnMgKi9cbi5oZWFkaW5nIHtcbiAgZm9udC1zaXplOiAxNXB0O1xufVxuXG4ubWFyZ2luLXRvcCB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi8qIGlkIHNlbGVjdG9ycyAqL1xuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAaUA,uCAGoB;;;;IADlBA,sCAAqB;;;;;;ACLjC,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,aAA6B;IAA7B,kBAAa,GAAbA,aAAa;IAFjC,aAAQ,GAAc,EAAE;IAGtB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACD,aAAa,CAACE,WAAW,EAAE;EAClD;EAEAC,QAAQ;IACN,IAAI,CAACH,aAAa,CAACI,mBAAmB,CAACC,SAAS,CAC7CJ,QAAmB,IAAI;MACtB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CACF;EACH;;AAbWH,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVjCb,8BAAiB;MAIaA,wBAAQ;MAAAA,iBAAO;MAEvCA,8BAAsB;MAC8BA,2BAAW;MAAAA,iBAAI;MAGrEA,8BAAwB;MAGlBA,iGAGoB;MACtBA,iBAAM;;;MAVHA,eAAsB;MAAtBA,uDAAsB;MAOCA,eAAW;MAAXA,sCAAW","names":["i0","ContactListComponent","constructor","contactSevice","contacts","getContacts","ngOnInit","contactChangedEvent","subscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/felipe/workspace/cms/src/app/contacts/contact-list/contact-list.component.html","/home/felipe/workspace/cms/src/app/contacts/contact-list/contact-list.component.ts"],"sourcesContent":["<div class=\"row\">\n  <div class=\"panel panel-default\">\n    <div class=\"col-xs-12 panel-heading\">\n      <div class=\"col-xs-9\">\n        <span class=\"heading\">Contacts</span>\n      </div>\n      <div class=\"col-xs-3\">\n        <a [routerLink]=\"['new']\" class=\"btn btn-success\">New Contact</a>\n      </div>\n    </div>\n    <div class=\"panel-body\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 margin-top\">\n          <cms-contact-item\n            *ngFor=\"let contactEl of contacts\"\n            [contact]=\"contactEl\"\n          ></cms-contact-item>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { Contact } from '../contact.model';\nimport { ContactService } from '../contact.service';\n\n@Component({\n  selector: 'cms-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css'],\n})\nexport class ContactListComponent implements OnInit {\n  contacts: Contact[] = [];\n\n  constructor(private contactSevice: ContactService) {\n    this.contacts = this.contactSevice.getContacts();\n  }\n\n  ngOnInit() {\n    this.contactSevice.contactChangedEvent.subscribe(\n      (contacts: Contact[]) => {\n        this.contacts = contacts;\n      }\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}